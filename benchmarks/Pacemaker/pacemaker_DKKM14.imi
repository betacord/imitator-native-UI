(************************************************************
 *                         IMITATOR
 *
 * Model of a pacemaker
 *
 * "Synthesising Optimal Timing Delays for Timed I/O Automata"
 * Marco Diciolla, Chang Hwan Peter Kim, Marta Kwiatkowska and Alexandru Mereacre
 * 2014
 *
 * Author          : Étienne André
 * Created         : 2015/02/11
 * Last modified   : 2024/02/22
 * IMITATOR version: 3.4
 ************************************************************)

var 	t, x
		: clock;

	B1 = 1, B2 = 2,
	E = 40,
	(* We treat PP, TAVD, AERP and VERP as uncontrollable parameters. *)
	AERP,
	PP,
	VERP,
	TAVD,
	TLRImTLAVI, (* only one parameter for "TLRI - TLAVI" to reduce the constraints size *)

			: parameter;


(************************************************************)
  automaton atrium
(************************************************************)
actions: Aget, AP;

loc Q: invariant True
	when t >= PP sync Aget do {t := 0} goto Qprime;
	when True sync AP do {} goto Qsecond;

loc Qprime: invariant True
	when t >= PP do {t := 0} goto Qprime;
	when x >= AERP do {x := 0} goto Q;

loc Qsecond: invariant True
	when True sync Aget do {x := 0} goto Qprime;

end (*atrium*)



(************************************************************)
  automaton conduction
(************************************************************)
actions: Aget, CDI;

loc C: invariant True
	when True sync Aget do {} goto Cprime;

loc Cprime: invariant True
	when t >= TAVD sync CDI do {t := 0} goto C;

end (*conduction*)



(************************************************************)
  automaton ventricle
(************************************************************)
actions: Vget, CD, VP;

loc V: invariant True
	when True sync CD goto Vprime;
	when True sync VP goto Vprime;

loc Vprime: invariant True
	when True sync Vget goto Vsecond;

loc Vsecond: invariant True
	when t >= VERP do {t := 0} goto V;

end (*ventricle*)



(************************************************************)
  automaton LRI
(************************************************************)
actions: AP, AS, VP, VS;

loc LRI: invariant t <= TLRImTLAVI
	when True sync VP do {t := 0} goto LRI;
	when True sync VS do {t := 0} goto LRI;
	when t >= TLRImTLAVI sync AP do {t := 0} goto LRI;
	when True sync AS goto ASed;

loc ASed: invariant True
	when True sync VP do {t := 0} goto LRI;
	when True sync VS do {t := 0} goto LRI;

end (*LRI*)



(************************************************************)
(* Initial state *)
(************************************************************)

init := {
	discrete =
		(*------------------------------------------------------------
		   INITIAL LOCATION
		  ------------------------------------------------------------*)
		loc[atrium]			:= Q,
		loc[conduction]	:= C,
		loc[ventricle]	:= V,
		loc[LRI]				:= LRI,
	;

	continuous =
		(*------------------------------------------------------------
		   INITIAL CLOCKS
		  ------------------------------------------------------------*)
		& x = 0
		& t = 0

		(*------------------------------------------------------------
		   PARAMETER CONSTRAINTS
		  ------------------------------------------------------------*)
		& AERP >= 0
		& PP >= 0
		& VERP >= 0
		& TAVD >= 0
		& TLRImTLAVI >= 0

		(*------------------------------------------------------------
		   PARAMETER VALUATION
		  ------------------------------------------------------------*)
	;
}

end
