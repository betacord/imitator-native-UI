(* EXAMPLE 2 *)
var
    x1_, x2 : clock;
    id : int;
    k = 2 : constant;
    IDLE = -1 : int;

automaton p1

loc A: invariant True
  when id = IDLE do { x1_ := 0 } goto req;

loc req: invariant x1_ <= k
  when x1_ <= k do { x1_ := 0; id := 0 } goto waiting;

loc waiting: invariant True
  when id = IDLE do { x1_ := 0 } goto req;
  when id = 0 & x1_ > k goto cs;

loc cs: invariant True
  when True do { id := IDLE } goto A;

end

automaton p2

loc A: invariant True
  when id = IDLE do { x2 := 0 } goto req;

loc req: invariant x2 <= k
  when x2 <= k do { x2 := 0; id := 1 } goto waiting;

loc waiting: invariant True
  when id = IDLE do { x2 := 0 } goto req;
  when id = 1 & x2 > k goto cs;

loc cs: invariant True
  when True do { id := IDLE } goto A;

end


init := {

    discrete =
        loc[p1] := A,
        loc[p2] := A,
        id := IDLE,
    ;

    continuous =
        x1_ = 0
      & x2 = 0
    ;
}

end
