(************************************************************
 *                                IMITATOR MODEL
 *
 * Title            : Dummy model used to test properties
 * Description      : Dummy model used to test properties
 * Correctness      : N/A
 * Scalable         : no
 * Generated        : no
 * Categories       : TBD
 * Source           : Own work
 * bibkey           : 
 * Author           : Étienne André
 * Modeling         : Étienne André
 * Input by         : Étienne André
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created          : 2023/07/31
 * Last modified    : 2023/08/02
 * Model version    : 0.2
 *
 * IMITATOR version : 3.4-beta
 ************************************************************)

var

(* Clocks *)
 	x, unused_clock, (* unused_clock is unused *)
		: clock;

(* Discrete *)
	i, unused,
		: int;
	r,
		: rational;

(* Parameters *)
	p, unused_parameter,
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
actions: a;

loc l1: invariant True
	when x = p & i >= 0 & r >= 0 sync a do {i := i+1, r := r*r} goto l1;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init := {
	
    discrete =
		(*------------------------------------------------------------*)
		(* Initial location *)
		(*------------------------------------------------------------*)
		loc[pta] := l1,

		(*------------------------------------------------------------*)
		(* Initial discrete variables assignments *)
		(*------------------------------------------------------------*)
		r := 1/2,
		i := 0,

    ;

    continuous =        
		(*------------------------------------------------------------*)
		(* Initial clock constraints *)
		(*------------------------------------------------------------*)
		& x = 0

		(*------------------------------------------------------------*)
		(* Parameter constraints *)
		(*------------------------------------------------------------*)
		& p >= 0
	;
}


(************************************************************)
(* The end *)
(************************************************************)
end
