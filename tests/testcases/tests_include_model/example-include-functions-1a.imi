(************************************************************
 *                                IMITATOR MODEL
 *
 * Title            :
 * Description      :
 * Correctness      : N/A
 * Scalable         : no
 * Generated        : no
 * Categories       : TBD
 * Source           : Own work
 * bibkey           :
 * Author           : B.L
 * Modeling         : B.L
 * Input by         : B.L
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created          : 2021/10/04
 * Last modified    : 2021/10/18
 * Model version    : 1.0
 *
 * IMITATOR version : 3.2
 ************************************************************)

var

  i : int;

fn f() : int begin
  var i1 : int = i + 1;
  var i2 : int = (i + 1) * 2;
  i1 + i2
end



automaton P1

  loc s0: invariant True
  when True goto lend;

  accepting loc lend : invariant True

end

#include "./example-include-functions-1b.imi";

init := {
  discrete =
    loc[P1]:=s0,
    i := 0
  ;

}
