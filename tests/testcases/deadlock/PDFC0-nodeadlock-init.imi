(************************************************************
 *                      IMITATOR MODEL
 *
 * Dummy example to test parametric deadlock-freeness checking
 *
 * Description     : Dummy example to test parametric deadlock-freeness checking; no deadlock but an initial state triggering a parameter constraint
 * Correctness     : The system is deadlock-free
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)

 *
 * Created         : 2022/10/04
 * Last modified   : 2022/10/04
 *
 * IMITATOR version: 3.3
 ************************************************************)

var

(* Clocks *)
 	x
		: clock;

(* Parameters *)
	p1
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: ;

loc l1: invariant x <= 5 - p1
	when True do {x := 0} goto l2;

loc l2: invariant True
	when True do {x := 0} goto l2;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init := {

    discrete =
		(*------------------------------------------------------------*)
		(* Initial location *)
		(*------------------------------------------------------------*)
		loc[pta] := l1,

		(*------------------------------------------------------------*)
		(* Initial discrete variables assignments *)
		(*------------------------------------------------------------*)
    ;

    continuous =
		(*------------------------------------------------------------*)
		(* Initial clock constraints *)
		(*------------------------------------------------------------*)
		& x = 0

		(*------------------------------------------------------------*)
		(* Parameter constraints *)
		(*------------------------------------------------------------*)
		& p1 >= 0
	;
}




(************************************************************)
(* The end *)
(************************************************************)
end
